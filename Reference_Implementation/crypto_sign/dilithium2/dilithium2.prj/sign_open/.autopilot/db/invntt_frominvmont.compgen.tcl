# This script segment is generated automatically by AutoPilot

# Memory (RAM/ROM)  definition:
set ID 54
set hasByteEnable 0
set MemName invntt_frominvmont_zetas_inv
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 23
set AddrRange 256
set AddrWd 8
set TrueReset 0
set IsROM 1
set ROMData { "11000011011011000110011" "00011001110100101001010" "11010101000000110011001" "10000111100101000110111" "00101001100100100100001" "00000001011110010110010" "10001000001000011010101" "00010000111010110110000" "01101100001101001010111" "11001110100001111010111" "00011101110011111111011" "11111010001001101101110" "01000101110001011110111" "00001100110110000100011" "01000100001111001010001" "01011001101100010011100" "01110101000000000100101" "00000111111101000100110" "00100001101100111001101" "00110010111000101101000" "11000101011100110011001" "00110111000001101010010" "11001011001001100110001" "00001101000001010111011" "11110001010101111110011" "11001011010101000011010" "00011101110010000001100" "10111100001101100001010" "11110111100001001000001" "10001001101111011101100" "10010100001101011001000" "01011100101111011000100" "00110110111001111000011" "01110000101111010011001" "11001101010100001100111" "11100111000001101011100" "10100011110001010010000" "11001110011010111111001" "11111010110001111100101" "01100001001001101000010" "00100100110110001011001" "11111010000101101000110" "10011000111011101101001" "11000100000001001101001" "00000101000001101110001" "10110100110110001001010" "10110101100001001110110" "00111101011100110101000" "01110011010000111100001" "11101101100111100101001" "01110001101001111101110" "01001110110111011100101" "00111000010111010101001" "00110011000000000001000" "01010110011010111110100" "00010000100011011001100" "10010111110011100110010" "10111011100001000011001" "11101000000010000011010" "11010001111101111111100" "00101001111101001010011" "01001101101101010001000" "11000101001111101101000" "00100111000011010101101" "00111011111001010010010" "10011010110110101111110" "11010111101100100111010" "00001101110001000011100" "00101011101001011010001" "01100101010000111000010" "11011001111111011100110" "00101000101011101000010" "00100000000100101011010" "11000101101010010110110" "11000110101101011000010" "01011011010111101110111" "01101100010010001110000" "10101111010011101110000" "11011001100101101000011" "01110010111101011101000" "11001111000010110111011" "10110011110111110110000" "11011001101011001111101" "10000011111111011100101" "11011001001001010010000" "01001111000010111000110" "10101101100111001101000" "10101001000000100011100" "11111001100011011011101" "11001010110001100111010" "01100101111111111000101" "10010110110110100011010" "10000010010111111100110" "01001010011001010111111" "11110110111111011110101" "11110101010011011101000" "01101101101111000111110" "00010111011101001101110" "00010000000001100101010" "01101100100011010000011" "10011101111000001111011" "11000001101111101111101" "01011111010010100001010" "00010011111111111011111" "00001111111100100000100" "00000001010100011111100" "00110001001110101110110" "11110000101000001111110" "11100110110000010100111" "11100011111111100011011" "11000111000000111100111" "11100100010000110100011" "01100001011101000100010" "00100100100010010101010" "01110010101110100000100" "01101011011011101100000" "10010100100010010100100" "00100101101101100010000" "10110101011101001111010" "11110111100110100001100" "01101100101101111011110" "01001010101010001100001" "10111011010001000000110" "01100110000000010001110" "10001011001111000001001" "10111001000011100101101" "10010111110000010100111" "10111111111010101101110" "10001010100100000101000" "01101110101111110101001" "01110110011100001100100" "01011100001000101011110" "00101011111011111111110" "00011000110011010111100" "00110000010111100100000" "11011000100000111011100" "11010110110100001101111" "11010111100110011111100" "00000101011010100100000" "01001001100001101101101" "00111000100000000001010" "10011111010100100111111" "01101100011011111111000" "11111001111101110010101" "00101000001011111111000" "11101000100011101100000" "00000110011100000100001" "10110110110101010010101" "01100011001011001000000" "11001101010011010111001" "00000000010000110000010" "01110001101010000110110" "10000110111100010100111" "11100100001001010111101" "00100001100100101000010" "11111110011001100000001" "10100001001101001111001" "11110000001101111101010" "11110111101010100010001" "01100110000010000010111" "00101011101001110011110" "11000111001101010011110" "11010110100101000101101" "00001011101010000100011" "00100111111011000001001" "00000000101100111000101" "00100101011111011101101" "00010100011110101111110" "01001011100101111110111" "00001100100010110010011" "01110000101101110110101" "01011010100100001011101" "10101100111000101100010" "10111110001100111001001" "00011110000000101111011" "10010111100111100001111" "11111011111000000110111" "01101110110111100100000" "01100000010110101010010" "01100001010110110000000" "00011110100001100001010" "01111100100111110001110" "11000100100100010001111" "00100110011000010001011" "00110000011000001000101" "10111101010101000111010" "10010101101011000010011" "00101100010100110100011" "01011100110011111100111" "01110000001111000110001" "00101110101001101111111" "01110111111100100011011" "01010101011000011010011" "11000000100001010101101" "01001110000001111010000" "10001000101101011001101" "10001001010011110101110" "11100010101000010001011" "11101111100010001100111" "11100110111110001011001" "10001110110110001110101" "00110000110101110100100" "01000001010100111101001" "10010100101101111000010" "01110100101000010100111" "10010100110000111100011" "00110010001010100101010" "00110011110110111000011" "00010000011101010100011" "10111000000100101100101" "00001001001010110110011" "10010011101110000000001" "01010111100000110111111" "10010010101010101101011" "01011100111000110000100" "01110101110101001111011" "10001000010000101010010" "01001101011100000101100" "01101101100111111010100" "00110010101101011111101" "10010100000000100111100" "10100001110101100110100" "11111100110100111100001" "10101101001010110011010" "11110111001101000111100" "10000101010111000000000" "00000000100101111011110" "11001010000111111001100" "01100100000001101101000" "00101010101101100001001" "01110101110010100011001" "01000000101001000101010" "01000000010110010000101" "10101111110011010011001" "00100010001010101100000" "00010000110001001110000" "10010010010100001111001" "00100000111101001011100" "11100000011111110010001" "10101100100100110101001" "10101101111101011011010" "10100000110010110111000" "01011000000010011110111" "10100000100010110001100" "00111111110101110000001" "00001010111101101010011" "10110111111011011010110" "11001000000000111010110" "11110001100000111011101" "00011010101111011011000" "00010111101111011101000" "11111000100000110111101" "00001111110101011111101" "01001111100111011111110" "11111110111101100001010" "00000000000000000000000" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.772
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 55 \
    name p \
    reset_level 1 \
    sync_rst true \
    dir IO \
    corename p \
    op interface \
    ports { p_address0 { O 10 vector } p_ce0 { O 1 bit } p_we0 { O 1 bit } p_d0 { O 32 vector } p_q0 { I 32 vector } p_address1 { O 10 vector } p_ce1 { O 1 bit } p_q1 { I 32 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'p'"
}
}


# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 56 \
    name p_offset \
    type other \
    dir I \
    reset_level 1 \
    sync_rst true \
    corename dc_p_offset \
    op interface \
    ports { p_offset { I 3 vector } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_ctrl \
    type ap_ctrl \
    reset_level 1 \
    sync_rst true \
    corename ap_ctrl \
    op interface \
    ports { ap_start { I 1 bit } ap_ready { O 1 bit } ap_done { O 1 bit } ap_idle { O 1 bit } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -2 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -3 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_rst \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


